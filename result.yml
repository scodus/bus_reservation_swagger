openapi: 3.0.0
info:
  title: Bus Reservation
  description: Bus Reservation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: booking
  - name: bus schedule
paths:
  /booking:
    post:
      tags:
        - booking
      summary: store booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schedule_id: 51
                route_id: 1
                drop_location: drop location here
                rate: 2000
                qty: 4
                discount: ''
                total: 8000
                contact_name: Lal Bahadur
                contact_phone: '98713264'
                paid: 4000
                due: 4000
                return: 0
                bus_details: detail on bus here
                seat_id:
                  - 23
                  - 34
                  - 45
                  - 55
                sub_route_price: ''
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /search-bus:
    get:
      tags:
        - bus schedule
      summary: search bus
      parameters:
        - name: from
          in: query
          schema:
            type: integer
          example: '1'
        - name: to
          in: query
          schema:
            type: integer
          example: '8'
        - name: date
          in: query
          schema:
            type: string
          example: '2079-05-30'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /get-bus-seats/{bus_schedule_id}:
    get:
      tags:
        - bus schedule
      summary: get bus seat
      parameters:
        - name: bus_schedule_id
          in: path
          schema:
            type: integer
          required: true
          example: '51'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register:
    post:
      tags:
        - default
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: tomnjerry
                last_name:
                  type: string
                  example: jerry
                phone:
                  type: integer
                  example: '987654321'
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /refresh-token/{refresh_token}:
    post:
      tags:
        - default
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: >-
            def502000263688399a9344b687391c9a2712ce3e6b69a8ec98aad1f60ef015d55fd960c0b2eeeb1870f94b18118302cad35d408f89784912bdfdb6d24464c3194c5c46f1bd63030a3b2de9c78adddc38a1cea8db8b9c0bdaf07cc5e6591bfd22f81c569b86754f0c0f623e0e7869b73497d4ba8f9418904d7a3c9227e25f86c641b3e8cbe8bd6fa269629e986bb9d563f9db2fcacb360d5ebc74ce88ec11b1d9f283f53e41fca38e5d2f3f1a8811087c3046efda4ce60d4e3a26e00d624501d79e04a8abce021dea012fed966a5791161fd33795f8a85f4ac60c131692099d14d7b44200036c275b8d2240523b17b834665d2781215feff70a202e09c2c2e30a5aa5eb6423ece167c2749e27eca0ec60d1fea25037d30884e49cefa3d3af1d7a6c158ef42da268226f433e9c000ff64e536e941f57410fc58d8d3f033f58872797f42044df2d1c21321c7e106f06087ff5b8af043db4f2a20481b18b1c310d874f640c0
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /resend-account-verification-mail:
    post:
      tags:
        - default
      summary: resend email verification mail
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password-mail:
    post:
      tags:
        - default
      summary: send reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password:
    post:
      tags:
        - default
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: string
                  example: >-
                    A5C7IKsPYLX6iCrHlQUmHdbQGX8CXSHN0TiW2nygkIn7EzJlKGBjXtiF1SGyU0Xm
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location:
    get:
      tags:
        - default
      summary: location
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
