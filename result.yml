openapi: 3.0.0
info:
  title: Bus Reservation
  description: Bus Reservation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://buspark.scodus.com
    description: Base URL
  - url: https://ticketing.madani.com.np
    description: Base URL
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Authentication
  - name: Authentication > social
  - name: association
  - name: banner
  - name: bus booking
  - name: bus schedule
  - name: contact-us
  - name: location
  - name: our service, gallery
  - name: payment
  - name: payment > esewa
  - name: payment > khalti
  - name: payment > connectips
  - name: payment > prabhupay
  - name: payment > fonepay
  - name: site-setting
paths:
  /api/login/{provider}/callback:
    get:
      tags:
        - Authentication > social
      summary: login callback
      parameters:
        - name: token
          in: query
          schema:
            type: string
          example: >-
            ya29.a0AfB_byB43ueGGGkUA2qKbWMagbPzUgBbGk1hEQH0oH5Nq3XLVlOg02bf-1u_jYpca9OVJYqlJq5LfvYl0CaEe-dAK6vMmjEKTzJj5aE2mfwVA9MKt4X0aDDOBXHu34y7FuXsnp_dup2_FURod6Yp8Pma_U-AzH0gW94SaCgYKATMSARISFQHGX2MiiZoFL1yKXHx4Pin8iajn_Q0171
        - name: provider
          in: path
          schema:
            type: string
          required: true
          example: google
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-detail:
    get:
      tags:
        - Authentication
      summary: get profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Authentication
      summary: update profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: customer
                last_name:
                  type: integer
                  example: '1'
                image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-change:
    post:
      tags:
        - Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                old_password:
                  type: integer
                  example: '1234'
                new_password:
                  type: integer
                  example: '12345'
                new_password_confirmation:
                  type: integer
                  example: '12345'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register:
    post:
      tags:
        - Authentication
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: tomnjerry
                last_name:
                  type: string
                  example: jerry
                phone:
                  type: integer
                  example: '987654321'
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Authentication
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@admin.com
                password:
                  type: integer
                  example: '1234'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/logout:
    post:
      tags:
        - Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/refresh-token/{refresh_token}:
    post:
      tags:
        - Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/resend-account-verification-mail:
    post:
      tags:
        - Authentication
      summary: resend email verification mail
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password-mail:
    post:
      tags:
        - Authentication
      summary: reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password:
    post:
      tags:
        - Authentication
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: integer
                  example: '12231'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/association:
    get:
      tags:
        - association
      summary: association
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/association/test7:
    get:
      tags:
        - association
      summary: association single
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/banner:
    get:
      tags:
        - banner
      summary: banner
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/pre-booking:
    get:
      tags:
        - bus booking
      summary: pre booking
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          schema:
            type: integer
          example: '1'
        - name: to
          in: query
          schema:
            type: integer
          example: '2'
        - name: schedule_id
          in: query
          schema:
            type: integer
          example: '127'
        - name: date
          in: query
          schema:
            type: string
          example: '2080-05-31'
        - name: seat_id[]
          in: query
          schema:
            type: integer
          example: '54'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/pre-booking-timeout:
    post:
      tags:
        - bus booking
      summary: pre booking timeout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_id:
                  type: integer
                  example: '125'
                seat_id[]:
                  type: integer
                  example: '49'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/bus-booking:
    post:
      tags:
        - bus booking
      summary: store booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schedule_id: 127
                route_id: 1
                drop_location: DJE
                rate: 15
                contact_name: XYZ  augx
                contact_phone: '98713264'
                bus_details: ''
                seat_id:
                  - 54
                sub_route_price: null
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/bus-booking/{booking_id}/cancel:
    post:
      tags:
        - bus booking
      summary: cancel whole booking
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: booking_id
          in: path
          schema:
            type: integer
          required: true
          example: '555'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/my-booking:
    get:
      tags:
        - bus booking
      summary: my booking history
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
          description: Departure Date From
          example: '2080-03-31'
        - name: to_date
          in: query
          schema:
            type: string
          description: Departure Date To
          example: '2080-03-31'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/search-bus:
    get:
      tags:
        - bus schedule
      summary: search bus
      parameters:
        - name: from
          in: query
          schema:
            type: integer
          example: '1'
        - name: to
          in: query
          schema:
            type: integer
          example: '2'
        - name: date
          in: query
          schema:
            type: string
          example: '2080-05-28'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/get-bus-seats/{bus_schedule_id}:
    get:
      tags:
        - bus schedule
      summary: get bus seat
      parameters:
        - name: bus_schedule_id
          in: path
          schema:
            type: integer
          required: true
          example: '125'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/contact-us:
    post:
      tags:
        - contact-us
      summary: contact us
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: A B
                subject:
                  type: string
                  example: abc
                message:
                  type: string
                  example: adsfghjk
                email:
                  type: string
                  example: xyz@gmail.com
                phone_no:
                  type: integer
                  example: '9876543210'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/location:
    get:
      tags:
        - location
      summary: location list
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/location/main:
    get:
      tags:
        - location
      summary: location main list
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/location/sub:
    get:
      tags:
        - location
      summary: location sub list
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service/all:
    get:
      tags:
        - our service, gallery
      summary: our service
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service:
    get:
      tags:
        - our service, gallery
      summary: our service paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service/by/{id}:
    get:
      tags:
        - our service, gallery
      summary: our service single id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service/{slug}:
    get:
      tags:
        - our service, gallery
      summary: our service single by slug
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: quae-id-aut-commodo
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service/{id}/gallery/all:
    get:
      tags:
        - our service, gallery
      summary: our service gallery
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service/{id}/gallery:
    get:
      tags:
        - our service, gallery
      summary: our service gallery paginated
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-service-gallery/by/{id}:
    get:
      tags:
        - our service, gallery
      summary: our service gallery single by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/esewa/success:
    post:
      tags:
        - payment > esewa
      summary: transaction_success-verification POST
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                oid:
                  type: integer
                  example: '258'
                amt:
                  type: integer
                  example: '2500'
                refId:
                  type: string
                  example: 0004Q1T
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/esewa/fail:
    post:
      tags:
        - payment > esewa
      summary: transaction_failure POST
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                booking_id:
                  type: integer
                  example: '102'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/khalti/success:
    post:
      tags:
        - payment > khalti
      summary: transaction_success-verification v2
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pidx:
                  type: string
                  example: Hx2sWTCDfidjpVTvgv2Q9o
                amount:
                  type: integer
                  example: '2000'
                mobile:
                  type: integer
                  example: '9800000001'
                purchase_order_id:
                  type: integer
                  example: '373'
                purchase_order_name:
                  type: string
                  example: test
                txnId:
                  type: string
                  example: TuVk37VvA5PMgrAjm2rrtD
                transaction_id:
                  type: string
                  example: TuVk37VvA5PMgrAjm2rrtD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/khalti/success/app:
    post:
      tags:
        - payment > khalti
      summary: transaction_success-verification v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pidx:
                  type: string
                  example: dH8yXAvRYdUSJ2EsDcbzWB
                amount:
                  type: integer
                  example: '2000'
                mobile:
                  type: integer
                  example: '9860898042'
                purchase_order_id:
                  type: integer
                  example: '614'
                purchase_order_name:
                  type: string
                  example: hamro job
                txnId:
                  type: string
                  example: cBpJjFvZdiUFAqfJWJTV3a
                transaction_id:
                  type: string
                  example: cBpJjFvZdiUFAqfJWJTV3a
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/payment/verify/:
    post:
      tags:
        - payment > khalti
      summary: verification v1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                token: BsZ3iarPqQB4puqQ3jSCsQ
                amount: 2000
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Key test_secret_key_8cd8d5a4ec4d44b18d7c75863457308f
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/khalti/fail:
    post:
      tags:
        - payment > khalti
      summary: transaction_failure POST
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                booking_id:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/khalti/initiate:
    post:
      tags:
        - payment > khalti
      summary: transaction_initiate-payment POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                return_url: http://localhost:3000/ticket-info
                website_url: http://localhost:3000
                amount: 2000
                purchase_order_id: 111
                purchase_order_name: test
                modes:
                  - KHALTI
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v2/epayment/lookup/:
    post:
      tags:
        - payment > khalti
      summary: Lookup v2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pidx: Hx2sWTCDfidjpVTvgv2Q9o
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Key test_secret_key_8cd8d5a4ec4d44b18d7c75863457308f
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/connectips/success:
    post:
      tags:
        - payment > connectips
      summary: transaction_success-verification POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                PRN: dsfdsf
                AMT: 2500
                mobile: 9876543210
                PID: 238
                BID: BID
                UID: UID
                RU: RU
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/connectips/fail:
    post:
      tags:
        - payment > connectips
      summary: transaction_failure POST
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                booking_id:
                  type: integer
                  example: '102'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/prabhupay/success:
    post:
      tags:
        - payment > prabhupay
      summary: transaction_success-verification POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                transId: dsfdsf
                sellingCurrencyAmount: 2500
                accountingCurrencyAmount: 2500
                status: 200
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/prabhupay/fail:
    post:
      tags:
        - payment > prabhupay
      summary: transaction_failure POST Copy
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                booking_id:
                  type: integer
                  example: '102'
                amt:
                  type: integer
                  example: '2500'
                refId:
                  type: string
                  example: 0004Q1T
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/fonepay/success:
    post:
      tags:
        - payment > fonepay
      summary: transaction_success-verification POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                PRN: dsfdsf
                AMT: 2500
                mobile: 9876543210
                PID: 238
                BID: BID
                UID: UID
                RU: RU
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/payment/fonepay/fail:
    post:
      tags:
        - payment > fonepay
      summary: transaction_failure POST
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                booking_id:
                  type: integer
                  example: '102'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting:
    get:
      tags:
        - site-setting
      summary: site-setting
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
